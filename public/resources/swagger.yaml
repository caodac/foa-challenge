swagger: '2.0'
info:
  title: Translator Challenge 2 API
  version: 3.14159265359...
  contact:
    name: I AM A ROBOT
    x-responsibleOrganization: NIH/NCATS
    url: 'https://ncats.nih.gov/translator'
    email: gc@ncats.io
  description: >
    This is the Biomedical Data Translator Challenge 2 application programming
    interface (API). 


    Inspired by the **Knowledge Source** web service specification at:
    https://github.com/NCATS-Tangerine/translator-knowledge-beacon/


    Import this file into http://editor.swagger.io/ and 'Generate Server' for
    your favorite web container. Be sure to enable scripts for this website to
    work properly. The resulting web container only contains stubs for API calls
    --- you will need to author code within those stubs for the API to properly
    function. 


    Browse to http://{host}{basePath}/ui/ to test your API yourself.
  license:
    name: MIT License
    url: 'http://opensource.org/licenses/MIT'
host: 'localhost:8080'
basePath: /api
schemes:
  - http
produces:
  - application/json
tags:
  - name: types
    description: List of math functions that this API provides
  - name: functions
    description: Execute desired math function
paths:
  /types:
    get:
      tags:
        - types
      responses:
        '200':
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: |
                    the function name 
                desc:
                  type: string
                  description: |
                    a description of the function 
                idmap:
                  type: string
                  description: The URL to execute the API call on the id
          description: |
            Successful response with list of functions and their API endpoint
          examples:
            application/json:
              - id: collatzSiblings
                desc: Return missing Collatz siblings
                idmap: /function/collatzSiblings
  /functions/collatzSiblings:
    post:
      summary: Return missing Collatz siblings
      description: >-
        Return the set of numbers that share the same Collatz sequence length as
        the input numbers.
      tags:
        - functions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: siblingSet
          description: A set of numbers sharing the same Collatz sequence length
          schema:
            type: object
            properties:
              siblingSet:
                type: array
                items:
                  type: integer
                example:
                  - 3
                  - 20
      responses:
        '200':
          schema:
            type: array
            items:
              type: integer
          description: |
            The set of remaining Collatz siblings
          examples:
            application/json:
              - 21
              - 128
